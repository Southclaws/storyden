/**
 * Generated by orval v6.31.0 🍺
 * Do not edit manually.
 * storyden
 * Storyden social API for building community driven platforms.
The Storyden API does not adhere to semantic versioning but instead applies a rolling strategy with deprecations and minimal breaking changes. This has been done mainly for a simpler development process and it may be changed to a more fixed versioning strategy in the future. Ultimately, the primary way Storyden tracks versions is dates, there are no set release tags currently.

 * OpenAPI spec version: rolling
 */
import useSWRMutation from "swr/mutation";
import type { SWRMutationConfiguration } from "swr/mutation";

import { fetcher } from "../client";
import type {
  AdminSettingsUpdateBody,
  AdminSettingsUpdateOKResponse,
  BadRequestResponse,
  InternalServerErrorResponse,
  UnauthorisedResponse,
} from "../openapi-schema";

/**
 * Update non-env configuration settings for installation.
 */
export const adminSettingsUpdate = (
  adminSettingsUpdateBody: AdminSettingsUpdateBody,
) => {
  return fetcher<AdminSettingsUpdateOKResponse>({
    url: `/admin`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: adminSettingsUpdateBody,
  });
};

export const getAdminSettingsUpdateMutationFetcher = () => {
  return (
    _: string,
    { arg }: { arg: AdminSettingsUpdateBody },
  ): Promise<AdminSettingsUpdateOKResponse> => {
    return adminSettingsUpdate(arg);
  };
};
export const getAdminSettingsUpdateMutationKey = () => `/admin` as const;

export type AdminSettingsUpdateMutationResult = NonNullable<
  Awaited<ReturnType<typeof adminSettingsUpdate>>
>;
export type AdminSettingsUpdateMutationError =
  | BadRequestResponse
  | UnauthorisedResponse
  | InternalServerErrorResponse;

export const useAdminSettingsUpdate = <
  TError =
    | BadRequestResponse
    | UnauthorisedResponse
    | InternalServerErrorResponse,
>(options?: {
  swr?: SWRMutationConfiguration<
    Awaited<ReturnType<typeof adminSettingsUpdate>>,
    TError,
    string,
    AdminSettingsUpdateBody,
    Awaited<ReturnType<typeof adminSettingsUpdate>>
  > & { swrKey?: string };
}) => {
  const { swr: swrOptions } = options ?? {};

  const swrKey = swrOptions?.swrKey ?? getAdminSettingsUpdateMutationKey();
  const swrFn = getAdminSettingsUpdateMutationFetcher();

  const query = useSWRMutation(swrKey, swrFn, swrOptions);

  return {
    swrKey,
    ...query,
  };
};
