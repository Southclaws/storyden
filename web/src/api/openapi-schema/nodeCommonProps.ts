/**
 * Generated by orval v7.2.0 üç∫
 * Do not edit manually.
 * storyden
 * Storyden social API for building community driven platforms.
The Storyden API does not adhere to semantic versioning but instead applies a rolling strategy with deprecations and minimal breaking changes. This has been done mainly for a simpler development process and it may be changed to a more fixed versioning strategy in the future. Ultimately, the primary way Storyden tracks versions is dates, there are no set release tags currently.

 * OpenAPI spec version: v1.25.8-canary
 */
import type { Asset } from "./asset";
import type { AssetList } from "./assetList";
import type { LinkReference } from "./linkReference";
import type { Metadata } from "./metadata";
import type { Node } from "./node";
import type { NodeDescription } from "./nodeDescription";
import type { NodeName } from "./nodeName";
import type { PostContent } from "./postContent";
import type { ProfileReference } from "./profileReference";
import type { RelevanceScore } from "./relevanceScore";
import type { Slug } from "./slug";
import type { TagReferenceList } from "./tagReferenceList";
import type { Visibility } from "./visibility";

/**
 * The main properties of a node.
 */
export interface NodeCommonProps {
  assets: AssetList;
  content?: PostContent;
  description: NodeDescription;
  /** A boolean indicating if the children of this node tree are hidden
when querying the full tree. This is useful for nodes that contain
a large amount of children and do not need to be rendered in a tree
view (such as a sidebar navigation). These children can still be
accessed via the node or node children GET operations for rendering.
 */
  hide_child_tree: boolean;
  link?: LinkReference;
  meta: Metadata;
  name: NodeName;
  owner: ProfileReference;
  parent?: Node;
  primary_image?: Asset;
  relevance_score?: RelevanceScore;
  slug: Slug;
  tags: TagReferenceList;
  visibility: Visibility;
}
