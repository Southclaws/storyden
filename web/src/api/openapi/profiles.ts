/**
 * Generated by orval v6.17.0 üç∫
 * Do not edit manually.
 * storyden
 * Storyden social API for building community driven platforms.
 * OpenAPI spec version: 1
 */
import useSwr from "swr";
import type { Key, SWRConfiguration } from "swr";

import { fetcher } from "../client";

import type {
  InternalServerErrorResponse,
  NotFoundResponse,
  ProfileGetOKResponse,
  UnauthorisedResponse,
} from "./schemas";

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

/**
 * Get a public profile by ID.
 */
export const profileGet = (accountHandle: string) => {
  return fetcher<ProfileGetOKResponse>({
    url: `/v1/profiles/${accountHandle}`,
    method: "get",
  });
};

export const getProfileGetKey = (accountHandle: string) =>
  [`/v1/profiles/${accountHandle}`] as const;

export type ProfileGetQueryResult = NonNullable<
  Awaited<ReturnType<typeof profileGet>>
>;
export type ProfileGetQueryError =
  | UnauthorisedResponse
  | NotFoundResponse
  | InternalServerErrorResponse;

export const useProfileGet = <
  TError =
    | UnauthorisedResponse
    | NotFoundResponse
    | InternalServerErrorResponse,
>(
  accountHandle: string,
  options?: {
    swr?: SWRConfiguration<Awaited<ReturnType<typeof profileGet>>, TError> & {
      swrKey?: Key;
      enabled?: boolean;
    };
  },
) => {
  const { swr: swrOptions } = options ?? {};

  const isEnabled = swrOptions?.enabled !== false && !!accountHandle;
  const swrKey =
    swrOptions?.swrKey ??
    (() => (isEnabled ? getProfileGetKey(accountHandle) : null));
  const swrFn = () => profileGet(accountHandle);

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
    swrKey,
    swrFn,
    swrOptions,
  );

  return {
    swrKey,
    ...query,
  };
};
