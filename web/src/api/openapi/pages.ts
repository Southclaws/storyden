/**
 * Generated by orval v6.17.0 üç∫
 * Do not edit manually.
 * storyden
 * Storyden social API for building community driven platforms.
 * OpenAPI spec version: 1
 */
import useSwr from "swr";
import type { Key, SWRConfiguration } from "swr";

import { fetcher } from "../client";

import type {
  InternalServerErrorResponse,
  PageCreateBody,
  PageCreateOKResponse,
  PageListOKResponse,
  PageUpdateBody,
  PageUpdateOKResponse,
  PageUpdateOrderBody,
} from "./schemas";

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

/**
 * Create a page for organising content.
 */
export const pageCreate = (pageCreateBody: PageCreateBody) => {
  return fetcher<PageCreateOKResponse>({
    url: `/v1/pages`,
    method: "post",
    headers: { "Content-Type": "application/json" },
    data: pageCreateBody,
  });
};

/**
 * Get a list of all pages on the site.
 */
export const pageList = () => {
  return fetcher<PageListOKResponse>({ url: `/v1/pages`, method: "get" });
};

export const getPageListKey = () => [`/v1/pages`] as const;

export type PageListQueryResult = NonNullable<
  Awaited<ReturnType<typeof pageList>>
>;
export type PageListQueryError = InternalServerErrorResponse;

export const usePageList = <TError = InternalServerErrorResponse>(options?: {
  swr?: SWRConfiguration<Awaited<ReturnType<typeof pageList>>, TError> & {
    swrKey?: Key;
    enabled?: boolean;
  };
}) => {
  const { swr: swrOptions } = options ?? {};

  const isEnabled = swrOptions?.enabled !== false;
  const swrKey =
    swrOptions?.swrKey ?? (() => (isEnabled ? getPageListKey() : null));
  const swrFn = () => pageList();

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
    swrKey,
    swrFn,
    swrOptions,
  );

  return {
    swrKey,
    ...query,
  };
};

/**
 * Update the sort order of pages.
 */
export const pageUpdateOrder = (pageUpdateOrderBody: PageUpdateOrderBody) => {
  return fetcher<PageListOKResponse>({
    url: `/v1/pages`,
    method: "patch",
    headers: { "Content-Type": "application/json" },
    data: pageUpdateOrderBody,
  });
};

/**
 * Retrieve a page's content.
 */
export const pageUpdate = (
  pageSlug: string,
  pageUpdateBody: PageUpdateBody,
) => {
  return fetcher<PageUpdateOKResponse>({
    url: `/v1/pages/${pageSlug}`,
    method: "patch",
    headers: { "Content-Type": "application/json" },
    data: pageUpdateBody,
  });
};
