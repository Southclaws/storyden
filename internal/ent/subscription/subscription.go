// Code generated by ent, DO NOT EDIT.

package subscription

import (
	"time"

	"github.com/rs/xid"
)

const (
	// Label holds the string label denoting the subscription type in the database.
	Label = "subscription"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldRefersType holds the string denoting the refers_type field in the database.
	FieldRefersType = "refers_type"
	// FieldRefersTo holds the string denoting the refers_to field in the database.
	FieldRefersTo = "refers_to"
	// EdgeAccount holds the string denoting the account edge name in mutations.
	EdgeAccount = "account"
	// EdgeNotifications holds the string denoting the notifications edge name in mutations.
	EdgeNotifications = "notifications"
	// Table holds the table name of the subscription in the database.
	Table = "subscriptions"
	// AccountTable is the table that holds the account relation/edge.
	AccountTable = "subscriptions"
	// AccountInverseTable is the table name for the Account entity.
	// It exists in this package in order to avoid circular dependency with the "account" package.
	AccountInverseTable = "accounts"
	// AccountColumn is the table column denoting the account relation/edge.
	AccountColumn = "subscription_account"
	// NotificationsTable is the table that holds the notifications relation/edge.
	NotificationsTable = "notifications"
	// NotificationsInverseTable is the table name for the Notification entity.
	// It exists in this package in order to avoid circular dependency with the "notification" package.
	NotificationsInverseTable = "notifications"
	// NotificationsColumn is the table column denoting the notifications relation/edge.
	NotificationsColumn = "subscription_notifications"
)

// Columns holds all SQL columns for subscription fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldRefersType,
	FieldRefersTo,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "subscriptions"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"account_subscriptions",
	"subscription_account",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// RefersTypeValidator is a validator for the "refers_type" field. It is called by the builders before save.
	RefersTypeValidator func(string) error
	// RefersToValidator is a validator for the "refers_to" field. It is called by the builders before save.
	RefersToValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() xid.ID
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
